[buildout]
extensions = mr.developer
parts =
    gae_sdk
    gae_tools
    app_lib
    local_appserver_deps
    nosetests
# order matters so that this python overwrites the one generated by gae_tools
# until they publish the fix https://github.com/prmtl/appfy.recipe.gae/pull/9
    python
versions = versions
gae-deploy-dir = ${buildout:directory}/app

[versions]
zc.buildout = 2.2.1
zc.recipe.egg = 2.0.1
appfy.recipe.gae = 0.9.4
lxml = 2.3.5
requests = 2.1.0
urllib3 = 1.7.1
python-dateutil = 1.5
pycrypto = 2.6
jsonpickle = 0.6.1
stripe = 1.12.0
pyramid = 1.4.5

[app_lib_base]
recipe = appfy.recipe.gae:app_lib
use-zipimport = false

# Generate relative paths for eggs so that the buildout can be moved around.
relative-paths = true

# Don't copy files that match these glob patterns.
ignore-globs =
    *.c
    *.pyc
    *.pyo

[local_appserver_deps]
<= app_lib_base
# provided on appengine but not included in SDK
lib-directory = local_appserver_deps
eggs =
    pycrypto
    lxml
    pillow

[app_lib]
<= app_lib_base
# Sets the library dependencies for the app.
lib-directory = ${buildout:gae-deploy-dir}/dist
# Define the libraries.
eggs =
    python-dateutil
    gaepytz
    jsonpickle
    pyramid

ignore-packages =
    lxml

[python]
recipe = zc.recipe.egg:scripts
interpreter = python
initialization =
    import sys
    sys.path.insert(0, '${buildout:gae-deploy-dir}/dist')
    sys.path.insert(0, '${buildout:directory}/local_appserver_deps')
    sys.path.insert(0, '${gae_sdk:destination}/google_appengine')
    sys.path.insert(0, '${buildout:gae-deploy-dir}')
    import dev_appserver
    dev_appserver.fix_sys_path()
eggs =
extra-paths =
    ${buildout:gae-deploy-dir}
    ${app_lib:lib-directory}
    ${local_appserver_deps:lib-directory}
    ${gae_sdk:destination}/google_appengine

[gae_sdk]
# Downloads and extracts the App Engine SDK.
recipe = appfy.recipe.gae:sdk
# update this with the latest release
url = https://commondatastorage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.3.zip
destination = ${buildout:parts-directory}
hash-name = false
clear-destination = true

[gae_tools]
# Installs appcfg, dev_appserver and python executables in the bin directory.
recipe = appfy.recipe.gae:tools
sdk-directory = ${gae_sdk:destination}/google_appengine
# Add these paths to sys.path in the generated scripts.
initialization =
    import dev_appserver
    dev_appserver.fix_sys_path()
extra-paths =
    ${buildout:gae-deploy-dir}
    ${buildout:gae-deploy-dir}/dist
    ${buildout:directory}/local_appserver_deps

[nosetests]
recipe = pbp.recipe.noserunner
eggs =
    nosegae
    unittest2
    webtest
    nose
    mock
    fixture
    coverage
    nose-exclude
initialization =
    import sys
    sys.path.insert(0, '${buildout:gae-deploy-dir}/dist')
    sys.path.insert(0, '${buildout:directory}/local_appserver_deps')
    sys.path.insert(0, '${gae_sdk:destination}/google_appengine')
    sys.path.insert(0, '${buildout:gae-deploy-dir}')
    import dev_appserver
    dev_appserver.fix_sys_path()
defaults =
    --logging-level=ERROR
    --with-gae
    --without-sandbox
    --no-path-adjustment
    --gae-application=${buildout:gae-deploy-dir}
    --where=${buildout:gae-deploy-dir}
# uncomment for easily running nose with coverage reports
#    --with-coverage
#    --cover-html
#    --cover-html-dir=${buildout:directory}/build/coverage
#    --cover-xml
#    --cover-xml-file=${buildout:directory}/build/coverage/coverage.xml
#    --cover-package=lib
#    --cover-package=handler
#    --cover-package=config
#    --cover-package=main
#    --cover-package=portfolio